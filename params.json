{"name":"Pathy","tagline":"A simple routing tool for Node-Webkit (http://nwjs.io) that allows folders and html files to act like URLs and CGI scripts.","body":"### Pathy\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A simple routing tool for Node-Webkit (http://nwjs.io) that allows folders and html files to act like URLs and CGI scripts.\r\n\r\n### Usage\r\n\r\n#### DOM Setup\r\nInclude the JavaScript file in your index HTML.\r\n```html\r\n<html>\r\n\t<head>\r\n\t\t<script type=\"text/javascript\" src=\"pathy.js\"></script>\r\n\t</head>\r\n\t<body>\r\n\t</body>\r\n</html>\r\n```\r\nPathy will inject pages into the `body` tag by default. This can be changed by `Pathy.container = '#id, or tag, or .class, etc.'`.\r\n\r\n#### Naviagtion\r\n```javascript\r\n\twindow.location.hash = \"users/load\";\r\n\t//or\r\n\tPathy.navigate(\"users/load\");\r\n```\r\nThe code above would look for `users/load.html` within the specified routes folder (the default is `./app/routes/`); it would have a final path of `./app/routes/users/load.html`. This file's contents would then be injected into the specified Pathy container (the default is `body`).\r\n\r\nIt's important to note that there's no need to include the \".html\" file extension in the path.\r\n\r\n#### Naviagtion + Arguments\r\n```javascript\r\n\tvar args = {id:12345};\r\n\twindow.location.hash = \"users/load+\"+JSON.stringify(args);\r\n\t//or\r\n\tPathy.navigate(\"users/load\", args);\r\n```\r\nThe code above send the argument `{id:12345}` to the page `./app/routes/users/load.html`.  The code below shows the contents of the page, as well as how to recieve the argument.\r\n\r\n#### Recieving Arguments\r\nThe following are the contents of the `./app/routes/users/load.html` file.\r\n```html\r\n<h1 id=\"greeter\"></h1>\r\n<script>\r\n\t(function($arguments){\r\n\t\tvar greeter = document.getElementById(\"greeter\");\r\n\t\tgreeter.textContent = \"User id:\"+$arguments.id+\" loaded\";\r\n\t})($arguments);\r\n</script>\r\n```\r\nOnce navigation has occurred and all scripts have been run, the following would be the result:\r\n```html\r\n<html>\r\n\t<head>\r\n\t\t<script type=\"text/javascript\" src=\"pathy.js\"></script>\r\n\t</head>\r\n\t<body>\r\n\t\t<h1 id=\"greeter\">User id:12345 loaded</h1>\r\n\t</body>\r\n</html>\r\n```\r\nThe contents of `./app/routes/users/load.html` were processed and added into the contents of the `index.html` from the DOM Setup example. If another path is called, the Pathy container (`body`) will be cleared and replaced with the processed contents of the new path.\r\n\r\n#### Changing Settings\r\nTo change the default route path:\r\nSet `Pathy.routes = './somewhere/anywhere/'`\r\nThe default path is `./app/routes/`.\r\n\r\nTo change the default container where content is set:\r\nSet `Pathy.container = '#id, or tag, or .class, etc.'`\r\nThe default container is `body`. \r\n\r\n#### Live Reload\r\nPathy has a live reload feature! Yay! If you've navigated to a page and it is modified, it will automatically reload without disrupting your JavaScript state.\r\nThis feature can be turned on and off by: `Pathy.liveReload = true/false`.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}